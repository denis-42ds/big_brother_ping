version: "3.8"

name: big_brother_ping

services:


  redis:
    image: redis:latest
    container_name: redis_container_bigBrotherBackend
    restart: always
    ports:
      - "6379:6379"
    depends_on:
      - database
      - eureka-server
      - scheduler_service
    volumes:
      - redis_data:/data
    networks:
      - cloud


  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer_bigBrotherBackend
    restart: always
    environment:
      - TZ=Europe/Moscow
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/portainer/portainer_data:/data
    ports:
      - "8000:8000"
      - "9443:9443"
    depends_on:
      - database
      - eureka-server
      - scheduler_service
      - redis
    networks:
      - cloud

  eureka-server:
    build:
      context: ./backend/eureka_server
      dockerfile: Dockerfile
    image: eureka-server
    container_name: eureka-server_bigBrotherBackend
    restart: always
    networks:
      - cloud
    environment:
      - "server.port=9001"
    ports:
      - "9001:9001"
    depends_on:
      - database

  api_gateway:
    build:
      context: ./backend/api_gateway
      dockerfile: Dockerfile
    image: api_gateway
    container_name: api_gateway_bigBrotherBackend
    restart: always
    networks:
      - cloud
    environment:
      - "server.port=8082"
    ports:
      - "8082:8082"
    depends_on:
      - database
      - eureka-server
      - scheduler_service
      - redis

  scheduler_service:
    build:
      context: ./backend/scheduler_service
      dockerfile: Dockerfile
    image: scheduler_service
    container_name: scheduler_service_bigBrotherBackend
    restart: always
    networks:
      - cloud
    environment:
      - "spring.datasource.url=jdbc:postgresql://database:5432/postgres"
      - "spring.datasource.username=postgres"
      - "spring.datasource.password=postgres"
      - "server.port=8080"
      - "SPRING_REDIS_PORT=6379"
      - "SPRING_REDIS_HOST=redis"
    ports:
      - "8080:8080"
    depends_on:
      - database
      - eureka-server

  database:
    image: postgres:12.3
    container_name: database_bigBrotherBackend
    restart: always
    ports:
      - "65432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./backend/docker/postgres:/var/lib/postgresql/data
    networks:
      - cloud
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"
    depends_on:
      - scheduler_service
    restart: always

volumes:
  redis_data: {}

networks:
  cloud:
    external: false
    driver: bridge
